;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Object definition file.                                                                         ;
;  ~~~~~~~~~~~~~~~~~~~~~~~                                                                         ;
;  Each section defines the scheme of one domain object. The following example describes, how the  ;
;  attributes have to be filled:                                                                   ;
;                                                                                                  ;
;  Example:                                                                                        ;
;  ~~~~~~~~                                                                                        ;
;  [<SectionName>]                                                                                 ;
;  Property = "<PropertyValue>"                                                                    ;
;  ...                                                                                             ;
;                                                                                                  ;
;  Description:                                                                                    ;
;  ~~~~~~~~~~~~                                                                                    ;
;  SectionName..: Name of the domain object to use with the mapper                                 ;
;  Property.....: Name of an object property                                                       ;
;  PropertyValue: Value of the current property (data type). See documentation for details.        ;
;                                                                                                  ;
;  Note:                                                                                           ;
;  ~~~~~                                                                                           ;
;  - The name of the table is generated by the prefix "ent_" and the lowercase section name.       ;
;  - The relations of each object are specified in the relations definition file.                  ;
;  - The property values are used to determine the data scheme in the database table. To generate  ;
;    the layout, use the GenericORMapperManagementTool component from the data::tools namespace.   ;
;  - The name of the property must not be equal to any reserved words of the database used. For    ;
;    MySQL databases please refer to http://dev.mysql.com/doc/refman/4.1/en/reserved-words.html.   ;
;                                                                                                  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;
; Definition of the Application object
;
[Application]
DisplayName = "VARCHAR(100)"


;
; Definition of the User object
;
[User]
DisplayName = "VARCHAR(100)"
FirstName = "VARCHAR(100)"
LastName = "VARCHAR(100)"
StreetName = "VARCHAR(100)"
StreetNumber = "VARCHAR(100)"
ZIPCode = "VARCHAR(100)"
City = "VARCHAR(100)"
EMail = "VARCHAR(100)"
Phone = "VARCHAR(100)"
Mobile = "VARCHAR(100)"
Username = "VARCHAR(100)"
Password = "VARCHAR(100)"
DynamicSalt = "VARCHAR(50)"


;
; Definition of the Group object
;
[Group]
DisplayName = "VARCHAR(100)"
Description = "TEXT"


;
; Definition of the Role object
;
[Role]
DisplayName = "VARCHAR(100)"
Description = "TEXT"


;
; Definition of the Permission object
;
[Permission]
DisplayName = "VARCHAR(100)"
Name = "VARCHAR(100)"
Value = "VARCHAR(100)"


;
; Defines an application proxy object. This is an object that
; represents an user's application object, the current user
; has access to.
;
; As of release 1.15 this object specifies the quality of access
; the user is granted. This is read, write, link, and delete.
; Read access can be defined implicitly, by creating a proxy
; object or explicitly, in case you are creating a proxy object
; for each object to distinguish by the proxy object's read
; property.
;
[AppProxy]
AppObjectId = "VARCHAR(50)"
ReadPermission = "BOOLEAN NOT NULL"
WritePermission = "BOOLEAN NOT NULL"
LinkPermission = "BOOLEAN NOT NULL"
DeletePermission = "BOOLEAN NOT NULL"
AddIndices = "AppObjectId(INDEX)|ReadPermission(INDEX)|WritePermission(INDEX)|LinkPermission(INDEX)|DeletePermission(INDEX)"


;
; Defines an application proxy object. This is an object that
; represents an user's application object, the current user
; has access to.
;
[AppProxyType]
AppObjectName = "VARCHAR(20)"
AddIndices = "AppObjectName(UNIQUE)"


;
; Defines an authorization token related to a permanent logged-in user.
;
; As of release 1.16 this object can be used in conjunction with the
; UmgtAutoLoginAction to automatically log in users in case they are
; new in session but checked the "remember me" box during log-in.
;
[AuthToken]
Token = "VARCHAR(60)"