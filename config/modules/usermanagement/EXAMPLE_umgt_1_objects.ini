;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Object definition file.                                                                         ;
;  ~~~~~~~~~~~~~~~~~~~~~~~                                                                         ;
;  Each section defines the scheme of one domain object. The following example descibes, how the   ;
;  attributes have to be filled:                                                                   ;
;                                                                                                  ;
;  Example:                                                                                        ;
;  ~~~~~~~~                                                                                        ;
;  [<SectionName>]                                                                                 ;
;  Property = "<PropertyValue>"                                                                    ;
;  ...                                                                                             ;
;                                                                                                  ;
;  Description:                                                                                    ;
;  ~~~~~~~~~~~~                                                                                    ;
;  SectionName..: Name of the domain object to use with the mapper                                 ;
;  Property.....: Name of an object property                                                       ;
;  PropertyValue: Value of the current property. See documentation for details.                    ;
;                                                                                                  ;
;  Note:                                                                                           ;
;  ~~~~~                                                                                           ;
;  - The name of the table is generated by the prefix "ent_" and the lowercase section name        ;
;  - The relations of each object are specified in the relations definition file                   ;
;  - The property values are used to determine the data scheme in the database table. To generate  ;
;    the layout, use the GenericORMapperSetup component from the data::tools namespace.            ;
;  - The name of the property must not be equal to any reserved words of the database used. For    ;
;    MySQL databases please refer to http://dev.mysql.com/doc/refman/4.1/en/reserved-words.html.   ;
;                                                                                                  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;
; Definition of the Application object
;
[Application]
DisplayName = "VARCHAR(100)"


;
; Definition of the User object
;
[User]
DisplayName = "VARCHAR(100)"
FirstName = "VARCHAR(100)"
LastName = "VARCHAR(100)"
StreetName = "VARCHAR(100)"
StreetNumber = "VARCHAR(100)"
ZIPCode = "VARCHAR(100)"
City = "VARCHAR(100)"
EMail = "VARCHAR(100)"
Phone = "VARCHAR(100)"
Mobile = "VARCHAR(100)"
Username = "VARCHAR(100)"
Password = "VARCHAR(100)"


;
; Definition of the Group object
;
[Group]
DisplayName = "VARCHAR(100)"


;
; Definition of the Role object
;
[Role]
DisplayName = "VARCHAR(100)"


;
; Definition of the Permission object
;
[Permission]
DisplayName = "VARCHAR(100)"
Name = "VARCHAR(100)"
Value = "VARCHAR(100)"


;
; Definition of the PermissionSet object
;
[PermissionSet]
DisplayName = "VARCHAR(100)"